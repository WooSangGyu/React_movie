{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","title","summary","poster","year","genres","className","src","alt","map","index","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","id","medium_cover_image","React","Component","ReactDOM","render","document","getElementById"],"mappings":"6RA+BeA,MA3Bf,YAAwD,IAAxCC,EAAuC,EAAvCA,MAAOC,EAAgC,EAAhCA,QAASC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,KAAMC,EAAS,EAATA,OAC1C,OACI,sBAAKC,UAAW,QAAhB,UACI,qBAAKC,IAAKJ,EAAQK,IAAKP,EAAOA,MAAOA,IACrC,sBAAKK,UAAY,aAAjB,UACI,oBAAIA,UAAY,cAAhB,SAA+BL,IAC/B,oBAAIK,UAAY,aAAhB,SAA8BF,IAC9B,qBAAIE,UAAY,eAAhB,UACKD,EAAOI,KAAI,SAACJ,EAAQK,GAAT,OACR,oBAAgBJ,UAAU,gBAA1B,SAA2CD,GAAlCK,MAEjB,oBAAGJ,UAAY,gBAAf,UAAgCJ,EAAQS,MAAM,EAAE,KAAhD,mBCqCDC,G,kNA9CbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,I,EAIVC,U,sBAAY,8BAAAC,EAAA,sEAKAC,IAAMC,IAAI,2DALV,gBAGEJ,EAHF,EAERK,KACEA,KAAQL,OAGZ,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IANzB,2C,kEAUVQ,KAAKN,c,+BAGG,IAAD,EACuBM,KAAKT,MAA3BC,EADD,EACCA,UAAWC,EADZ,EACYA,OACnB,OACE,yBAAST,UAAU,YAAnB,SACGQ,EACC,qBAAKR,UAAY,SAAjB,SACE,sBAAMA,UAAY,eAAlB,0BAEF,qBAAKA,UAAU,SAAf,SACGS,EAAON,KAAI,SAAAc,GAAK,OACf,cAAC,EAAD,CAEEC,GAAID,EAAMC,GACVvB,MAAOsB,EAAMtB,MACbC,QAASqB,EAAMrB,QACfC,OAAQoB,EAAME,mBACdrB,KAAMmB,EAAMnB,KACZC,OAAQkB,EAAMlB,QANTkB,EAAMC,e,GA/BTE,IAAMC,YCDxBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.59be850b.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Movie.css\";\n\nfunction Movie({title, summary, poster, year, genres}) {\n    return (\n        <div className= \"movie\">\n            <img src={poster} alt={title} title={title}/>\n            <div className = \"movie_data\">\n                <h3 className = \"movie_title\">{title}</h3>\n                <h5 className = \"movie_year\">{year}</h5>\n                <ul className = \"movie_genres\"> \n                    {genres.map((genres, index) => (\n                        <li key={index} className=\"genres_genres\">{genres}</li>\n                    ))}\n                <p className = \"movie_summary\">{summary.slice(0,140)}...</p>\n                </ul>\n            </div>\n        </div>\n    );\n}\n\nMovie.propTypes = {\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    summary: PropTypes.string.isRequired,\n    poster: PropTypes.string.isRequired,\n    year: PropTypes.number.isRequired,\n    genres :PropTypes.arrayOf(PropTypes.string).isRequired\n}\n\nexport default Movie;","import React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  state = {\n    isLoading: true,\n    movies: []\n  }\n\n  // 외부에 async 를 쓰고 내부에 await을 쓰게되면 await을 붙은 부분의 답이 끝나기를 기다린다. -> axios 가 항상 빠르진 않기 떄문에 비동기 제어를 한 것\n  getMovies = async () => {\n    const {\n      data: {\n        data: { movies }\n      }\n    } = await axios.get(\"http://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\n    this.setState({ movies, isLoading: false })\n  }\n\n  componentDidMount() {\n    this.getMovies()\n  }\n\n  render() {\n    const { isLoading, movies } = this.state;\n    return (\n      <section className=\"container\">\n        {isLoading ? (\n          <div className = \"loader\">\n            <span className = \"loader__text\">Loading...</span>\n          </div>) : (\n          <div className=\"movies\">\n            {movies.map(movie => (\n              <Movie \n                key={movie.id}\n                id={movie.id} \n                title={movie.title} \n                summary={movie.summary} \n                poster={movie.medium_cover_image} \n                year={movie.year} \n                genres={movie.genres}\n              />\n            ))}\n          </div>\n        )}\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}